<?xml version="1.0" encoding="UTF-8" ?>
<class name="PropertiesPanel">
    <relationships>
        <association class="Canvas" name="canvas" max="1"/>
        <association class="IRuntimeClass" name="active_panel" max="1"/>
    </relationships>
    <attribute type="SGUIVerticalGroup" name="panel_widget"/>
    <constructor>
        <parameter type="SGUIGroupWidget" name="container_widget"/>
        <body>
            <![CDATA[
            this.panel_widget = new SGUIVerticalGroup();
            this.panel_widget.setStyle("box");
            this.panel_widget.setMinWidth(400);
            container_widget.addChild(this.panel_widget);
            ]]>
        </body>
    </constructor>
    <scxml initial="listening">
        <state id="listening" initial="not_deactivating">
                       
            <!-- State selected, create its panel. -->
            <transition event="set_state_properties" target=".">
                <parameter name="xml" type="XElement"/>
                <parameter name="state_widget" type="SGUICanvasElement"/>
                <raise scope="cd" event="delete_instance">
                    <parameter expr='"active_panel"' />
                </raise>
                <raise scope="cd" event="create_instance">
                    <parameter expr='"active_panel"' />
                    <parameter expr='"StateProperties"'/>
                    <parameter expr='this.panel_widget'/>
                    <parameter expr='xml' />
                    <parameter expr='state_widget' />
                </raise>
            </transition>
        
            <state id="not_deactivating">
                <transition event="reset_panel" target="../deactivating"/>
                <transition event="instance_created" target="../wait_for_deactivations">
                    <raise scope="cd" event="associate_instance">
                    <parameter expr='"."'/>
                        <parameter expr='"active_panel/panel"' />
                    </raise>
                    <raise scope="cd" event="start_instance">
                        <parameter expr='"active_panel"' />
                    </raise>
                </transition>
            </state>
            <state id="deactivating">
                <onentry>
                    <raise scope="cd" event="delete_instance">
                        <parameter expr='"active_panel"' />
                    </raise>
                </onentry>
                <transition after="0" target="../not_deactivating"/>
            </state>
            <state id="wait_for_deactivations">
                <transition after="0" target="../not_deactivating"/>
            </state>
        </state>
    </scxml>
</class>
