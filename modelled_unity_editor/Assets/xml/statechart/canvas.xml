<?xml version="1.0" encoding="UTF-8" ?>
<class name="Canvas">
    <relationships>
        <association class="Window" name="window" max="1"/>
        <association class="State" name="children"/>
        <association class="State" name="all_states"/>
        <association class="Edge" name="all_edges"/>
    </relationships>
    <attribute type="SGUICanvas" name="canvas_widget"/>
    <attribute type="Dictionary&lt;int, int&gt;" name="children_map"/>
    <attribute type="Dictionary&lt;int, int&gt;" name="all_states_map"/>
    <attribute type="Dictionary&lt;int, int&gt;" name="all_edges_map"/>
    <attribute type="SGUICanvasElement" name="current_element"/>
    <attribute type="SGUICanvasEdge" name="current_edge"/>
    <attribute type="string" name="creation_type" init-value='"bla"'/>
    <constructor>
        <parameter type="SGUITopLevel" name="window_widget"/>
        <body>
            <![CDATA[
            this.canvas_widget = new SGUICanvas();
            ((SGUIGroupWidget)window_widget.getChild(0)).addChild(this.canvas_widget);
            this.children_map = new Dictionary<int,int>();
            this.all_states_map = new Dictionary<int,int>();
            this.all_edges_map = new Dictionary<int,int>();
            ]]>
        </body>
    </constructor>
    <scxml initial="main">
        <parallel id="main">
        
        	<!-- STATE INDEPENDENT ACTIONS -->
        	
            <state id="state_independent_actions" initial="listening">
                <state id="listening">
                
                    <!-- Set state creation type (toolbar event) -->

                    <transition event="set_creation_type" target=".">
                        <parameter name="creation_type" type="string"/>
                        <script>
                            this.creation_type = creation_type;
                        </script>
                    </transition>
                    
                    <!-- Unselect -->
                    
                    <transition event="unselect" target=".">
                        <parameter name="except_tag" type="int"/>
                        <raise event="unselect" target='"./all_states"'>
                            <parameter expr='except_tag'/>
                        </raise>
                    </transition>
 
                </state>
            </state>
            
            <!-- STATE DEPENDENT ACTIONS -->
            
            <state id="state_dependent_actions" initial="default">
            
                <!-- DEFAULT STATE-->
                
                <state id="default">
 
                    <!-- Left mouse down : unselect -->

                    <transition event="left-mouse-down" port="input"  cond="tag == this.canvas_widget.tag" target=".">
                        <parameter name="tag" type="int"/>
                        <raise event="unselect" target='"./all_states"'>
                            <parameter expr='tag'/>
                        </raise>
                    </transition>

                    <!-- Right mouse down : unselect + create state -->

                    <transition event="right-mouse-down" port="input" cond="tag == this.canvas_widget.tag" target="../state_creation">
                        <parameter name="tag" type="int"/>
                        <parameter type="Vector2" name="position"/>
                        <raise event="unselect" target='"./all_states"'>
                            <parameter expr='tag'/>
                        </raise>
                        <script>
                            this.current_element = new SGUICanvasElement(canvas_widget, position);
                        </script>
                        <raise scope="cd" event="create_instance">
                            <parameter expr='"./all_states"' />
                            <parameter expr='"State"'/>
                            <parameter expr='this.current_element' />
                        </raise>
                    </transition>

                    <!-- Middle mouse down : unselect -->

                    <transition event="middle-mouse-down" port="input"  cond="tag == this.canvas_widget.tag" target=".">
                        <parameter name="tag" type="int"/>
                        <raise event="unselect" target='"./all_states"'>
                            <parameter expr='tag'/>
                        </raise>
                    </transition>
                    
                    <!-- Connect immediate child state to canvas -->
                    
                    <transition event="new_child" target=".">
                        <parameter type="int" name="id"/>
                        <parameter type="SGUICanvasElement" name="child"/>
                        <script>
                            this.canvas_widget.addElement(child);
                            this.children_map[child.tag] = id;
                        </script>
                    </transition>
                    
                    <!-- Disconnection immediate child state from canvas -->
                    
                    <transition event="disconnect_child" target=".">
                        <parameter name="child" type="SGUICanvasElement"/>
                        <raise scope="cd" event="unassociate_instance">
                            <parameter expr='String.Format("children[{0}]", this.children_map[child.tag])' />                          
                        </raise>
                        <script>
                            this.children_map.Remove(child.tag);
                            this.canvas_widget.removeElement(child);
                        </script>
                    </transition>
                    
                    <!-- Initiate state hierarchy connection -->
                    
                    <transition event="connect_child_to_parent" target="../hierarchy_connection">
                        <parameter name="child" type="SGUICanvasElement"/>
                        <parameter name="parent" type="SGUICanvasElement"/>
                        <script>
                            this.current_element = child;
                            String parent_path = ".";
                            if (parent != null)
                            {
                                parent_path = String.Format("all_states[{0}]", this.all_states_map[parent.tag]);
                            }
                            String child_path = String.Format("all_states[{0}]", this.all_states_map[child.tag]);
                        </script>
                        <raise scope="cd" event="associate_instance">
                            <parameter expr='parent_path' />
                            <parameter expr='child_path + "/parent"'/>
                        </raise>
                        <raise scope="cd" event="associate_instance">
                            <parameter expr='child_path' />
                            <parameter expr='parent_path + "/children"'/>
                        </raise>
                    </transition>

                    <!-- Element initiated edge creation -->
                    
                    <transition event="create_edge" target="../edge_creation">
                        <parameter type="SGUICanvasElement" name="source_element"/>
                        <parameter type="Vector2" name="position"/>
                        <raise event="enter_edge_creation" target='"all_states"'/>
                        <script>
                            this.current_edge = new SGUICanvasEdge(source_element, position);
                        </script>
                        <raise scope="cd" event="create_instance">
                            <parameter expr='"./all_edges"' />
                            <parameter expr='"Edge"'/>
                            <parameter expr='this.current_edge' />
                        </raise>
                    </transition>
                </state>
                
                <!-- STATE CREATION STATE -->

                <state id="state_creation">
                    <transition event="instance_created" cond='association_name.EndsWith("/all_states")' target="../hierarchy_connection">
                        <parameter name="id" type="int"/>
                        <parameter name="association_name" type="String"/>
                        <script>
                            String association_path = String.Format("{0}[{1}]", association_name, id);
                            //Debug.Log(string.Format("setting tag {0} to id {1}", this.current_element.tag, id));
                            this.all_states_map[this.current_element.tag] = id;
                        </script>
                        <raise scope="cd" event="associate_instance">
                            <parameter expr='"."'/>
                            <parameter expr='association_path + "/parent"' />
                        </raise>
                        <raise scope="cd" event="associate_instance">
                            <parameter expr='"."'/>
                            <parameter expr='association_path + "/canvas"' />
                        </raise>
                        <raise scope="cd" event="associate_instance">
                            <parameter expr='association_path' />
                            <parameter expr='"./children"'/>
                        </raise>
                        <raise scope="cd" event="start_instance">
                            <parameter expr='association_path' />
                        </raise>
                    </transition>
                </state>
                
                <!-- STATE HIERARCHY CONNECTION STATE -->
                
                <state id="hierarchy_connection">
                    <transition event="instance_associated" cond='association_name.EndsWith("/children")' target="../default">
                        <parameter name="id" type="int"/>
                        <parameter name="association_name" type="String"/>
                        <script>
                            String parent_path = association_name.Substring(0, association_name.Length-9);
                        </script>
                        <raise event="new_child" target="parent_path">
                            <parameter expr="id"/>
                            <parameter expr="this.current_element"/>
                        </raise>
                        <script>
                            this.current_element = null;
                        </script>
                    </transition>
                </state>
                
                <!-- EDGE CREATION STATE -->
                
                <state id="edge_creation" initial="activation">
                    <state id="activation">
                        <transition event="instance_created" target="../wait">
                            <parameter name="id" type="int"/>
                            <parameter name="association_name" type="String"/>
                            <script>
                                String association_path = String.Format("{0}[{1}]", association_name, id);
                                this.all_edges_map[this.current_edge.tag] = id;
                            </script>
                            <raise scope="cd" event="associate_instance">
                                <parameter expr='"."'/>
                                <parameter expr='association_path + "/canvas"' />
                            </raise>
                            <raise scope="cd" event="start_instance">
                                <parameter expr='association_path' />
                            </raise>
                        </transition>
                    </state>
                    <state id="wait">



                        <transition event="edge_cancelled" target="../../default">
                            <script>
                                String association_path = String.Format("all_edges[{0}]", this.all_edges_map[this.current_edge.tag]);
                                this.all_edges_map.Remove(this.current_edge.tag);
                            </script>
                            <raise scope="cd" event="delete_instance">
                                <parameter expr="association_path"/>
                            </raise>
                            <script>
                                this.current_edge = null;
                            </script>
                        </transition>



                        <transition event="edge_finished" target="../../default">
                            <script>
                                this.current_edge = null;
                            </script>
                        </transition>



                        <transition event="edge_end" target=".">
                            <parameter name="element" type="SGUICanvasElement"/>
                            <parameter name="position" type="Vector2"/>
                            <script>
                                String association_path = String.Format("all_edges[{0}]", this.all_edges_map[this.current_edge.tag]);
                            </script>
                            <raise event="edge_end" target="association_path">
                                <parameter expr="element"/>
                                <parameter expr="position"/>
                            </raise>
                        </transition>



                        <transition event="over_edge_end" target=".">
                            <parameter name="element" type="SGUICanvasElement"/>
                            <parameter name="position" type="Vector2"/>
                            <script>
                                String association_path = String.Format("all_edges[{0}]", this.all_edges_map[this.current_edge.tag]);
                            </script>
                            <raise event="over_edge_end" target="association_path">
                                <parameter expr="element"/>
                                <parameter expr="position"/>
                            </raise>
                        </transition>
                    </state>
                    <onexit>
                        <raise event="edge_creation_stopped" target='"all_states"'/>
                    </onexit>
                </state>
 
            </state>
            
        </parallel>
    </scxml>
</class>
